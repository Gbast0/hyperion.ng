name: Hyperion CI/PR Builds
run-name: |
  ${{ github.event_name == 'push' && '🌱 Push build -' || '' }}
  ${{ github.event_name == 'pull_request' && format('📦 Artifacts build for PR {0} - {1}', github.event.pull_request.number, github.event.pull_request.title) || github.event.head_commit.message }}

on:
  push:
    branches:
      - '**'
    tags:
      - '*'
  pull_request:
    branches:
      - 'master'

jobs:

  github_build:
    name: Qt ${{ matrix.qt_version }} Build ${{ matrix.qt_version == '6' && '(Testing)' || '' }}
    strategy:
      fail-fast: false
      matrix:
        qt_version: ['5', '6']
    uses: ./.github/workflows/qt5_6.yml
    secrets: inherit
    with:
      qt_version: ${{ matrix.qt_version }}
      event_name: ${{ github.event_name }}
      pull_request_number: ${{ github.event.pull_request.number }}
      publish: ${{ startsWith(github.event.ref, 'refs/tags') && matrix.qt_version == '5' }}

  save_artifacts_to_repo:
    name: 💾 Save Build to Repository
    needs: [github_build]
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for branch creation

      - name: 🛠 Prepare Build Output
        run: |
          mkdir -p build_artifacts
          cp -r build/* build_artifacts/ || echo "No files copied"
          ls -lah build_artifacts/

      - name: 📤 Commit & Push Build Files
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Checkout or create the 'build-artifacts' branch
          git checkout -B build-artifacts
          
          # Add & commit changes
          git add build_artifacts/
          git commit -m "🚀 New build artifacts - $(date +'%Y-%m-%d %H:%M:%S')"
          git push origin build-artifacts --force

  github_publish:
    name: 🚀 Publish GitHub Releases
    if: ${{ inputs.qt_version == '5' && inputs.publish }}
    needs: [github_build, save_artifacts_to_repo]
    runs-on: ubuntu-latest
    steps:
      - name: ⬇ Checkout
        uses: actions/checkout@v4

      - name: 🔧 Prepare
        run: |
          echo "TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
          echo "VERSION=$(tr -d '\n' < .version)" >> $GITHUB_ENV

      - name: 💾 Artifact download
        uses: actions/download-artifact@v4
        with:
          pattern: artifact-*
          path: all-artifacts

      - name: 📦 Upload
        uses: softprops/action-gh-release@v2
        with:
          name: Hyperion ${{ env.VERSION }}
          tag_name: ${{ env.TAG }}
          files: "all-artifacts/**"
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
